server:
  port: ${MOVIE_MATE_USER_SERVICE_PORT:7030}
  servlet:
    context-path: ${MOVIE_MATE_USER_SERVICE_CONTEXT_PATH:/api/v1}

spring:
  datasource:
    url: ${MOVIE_MATE_POSTGRE_URL}
    username: ${MOVIE_MATE_POSTGRE_USERNAME}
    password: ${MOVIE_MATE_POSTGRE_PASSWORD}
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
      #        show_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${MOVIE_MATE_KAFKA_SERVER_URI}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer



  cache:
    type: redis
    host: ${MOVIE_MATE_REDIS_HOST}
    port: ${MOVIE_MATE_REDIS_PORT:6379}
    database-idx: ${MOVIE_MATE_USER_SERVICE_DATABASE_INDEX:0}
    password: ${MOVIE_MATE_REDIS_PASSWORD}
    ttl: ${MOVIE_MATE_USER_SERVICE_REDIS_TTL:-1}
  application:
    name: user-service

security:
  jwt:
    secret-key: ${MOVIE_MATE_JWT_SECRET_KEY}
    access-expiration: ${MOVIE_MATE_JWT_ACCESS_EXPIRATION_TIME}
    refresh-expiration: ${MOVIE_MATE_JWT_REFRESH_EXPIRATION_TIME}
  root-user:
    username: ${MOVIE_MATE_USER_SERVICE_ROOT_USERNAME}
    email: ${MOVIE_MATE_USER_SERVICE_ROOT_EMAIL}
    password: ${MOVIE_MATE_USER_SERVICE_ROOT_PASSWORD}

logging:
  level:
    org:
      springframework: INFO

springdoc:
  api-docs:
    path: /docs
  swagger-ui:
    path: /docs/swagger-ui.html

eureka:
  client:
    serviceUrl:
      defaultZone: ${MOVIE_MATE_DISCOVERY_SERVER_URL}
    registerWithEureka: true
    fetchRegistry: true